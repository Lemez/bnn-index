 <nav>
    <a href="/">See Stories</a>
    <h2>What Not To Read</h2>
     <p>This project analyses Britain's main respectable newspapers for their mood. It is an attempt to show which papers might be bad for your health. <br/>To find out more about the methodology, click <strong><a href="#">here</a></strong>  </p>
  </nav>

<script> 
/* global d3, _ */

(function() {

  var margin = {top: 180, right: 20, bottom: 100, left: 100},
    margin2  = {top: 410, right: 20, bottom: 20, left: 100},
    width    = 764 - margin.left - margin.right,
    height   = 633 - margin.top - margin.bottom,
    height2  = 633 - margin2.top - margin2.bottom;

  var parseDate = d3.time.format('%X/%d/%m/%Y').parse,
    bisectDate = d3.bisector(function(d) { return d.date; }).left,
    legendFormat = d3.time.format('%b %d, %Y');
    timeFormat = d3.time.format('%H:00 ');

  var x = d3.time.scale().range([0, width]),
    x2  = d3.time.scale().range([0, width]),
     y = d3.scale.linear().range([height, 0]),
    y1  = d3.scale.linear().range([height, 0]),
    y2  = d3.scale.linear().range([height2, 0]),
    y3  = d3.scale.linear().range([800, 0]);

  var xAxis = d3.svg.axis().scale(x).orient('bottom'),
    xAxis2  = d3.svg.axis().scale(x2).orient('bottom'),
    yAxis   = d3.svg.axis().scale(y).orient('left');
   
  var GuardianLine = d3.svg.line()
    .interpolate('monotone')
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.guardian); });

  var TimesLine = d3.svg.line()
    .interpolate('monotone')
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.times); });

  var TelegraphLine = d3.svg.line()
    .interpolate('monotone')
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.telegraph); });

  var IndependentLine = d3.svg.line()
    .interpolate('monotone')
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.independent); });

  var MailLine = d3.svg.line()
    .interpolate('monotone')
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.mail); });

  var ExpressLine = d3.svg.line()
    .interpolate('monotone')
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.express); });

  var svg = d3.select('body').append('svg')
	    .attr('class', 'chart')
	    .attr('width', width + margin.left + margin.right)
	    .attr('height', height + margin.top + margin.bottom );

  svg.append('defs').append('clipPath')
	    .attr('id', 'clip')
	  	.append('rect')
	    .attr('width', width)
	    .attr('height', height);

  var make_y_axis = function () {
	    return d3.svg.axis()
	      .scale(y)
	      .orient('left')
	      .ticks(3);
	  };

  var focus = svg.append('g')
    	.attr('class', 'focus')
    	.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');

  var barsGroup = svg.append('g')
   	 .attr('class', 'volume')
   	 .attr('clip-path', 'url(#clip)')
   	 .attr('transform', 'translate(' + margin.left + ',50)');

  // var context = svg.append('g')
  //  	 .attr('class', 'context')
  //  	 .attr('transform', 'translate(' + margin2.left + ',' + (margin2.top + 60) + ')');

  var legend = svg.append('g')
   	 .attr('class', 'chart__legend')
   	 .attr('width', width)
   	 .attr('height', 30)
   	 .attr('transform', 'translate(' + margin2.left + ', 20)')
   	 .append('text')
     .attr('class', 'chart__symbol')
     .text('BRITISH NEWSPAPER MISERY INDEX')

  var rangeSelection =  legend
   	 .append('g')
   	 .attr('class', 'chart__range-selection')
   	 .attr('transform', 'translate(110, 0)');

  d3.csv('https://dl.dropboxusercontent.com/u/2448084/papers_production.csv', type, function(err, data) {
  	  var brush = d3.svg.brush()
      	.x(x2)
      	.on('brush', brushed);

    function addMinutes(date, minutes) {
	    return new Date(date.getTime() + minutes*60000);
	}

    var xRange = d3.extent(data.map(function(d) { return d.date; }));
    var minDate = xRange[0];

    // add 3 mins to  last date to make it play nice with bars
    var maxDate = addMinutes(xRange[1],3);
    
    var allValues = [].concat(data.map(function (d) {return (d.guardian);}), 
    		data.map(function (d) {return (d.mail);}),
    		data.map(function (d) {return (d.independent);}),
    		data.map(function (d) {return (d.telegraph);}),
    		data.map(function (d) {return (d.express);}),
    		 data.map(function (d) {return (d.times);}));

    var min = Math.min.apply(null, allValues),
    max = Math.max.apply(null, allValues);

    y.range([height, min]);
    y.domain([max+1,min-1]);

    x.domain([minDate,maxDate]);

    x2.domain(x.domain());
    y2.domain(y.domain());
    y3.domain(d3.extent(allValues));

	  var area2 = d3.svg.area()
				.interpolate('monotone')
				.x(function(d) { return x2(d.date); })
				.y0(height2)
				.y1(function(d) { return y2(d.guardian); });

    var range = legend.append('text')
      .text(legendFormat(new Date(xRange[0])) + ' - ' + legendFormat(new Date(xRange[1])))
      .style('text-anchor', 'end')
      .attr('transform', 'translate(' + width + ', 0)');

    focus.append('g')
        .attr('class', 'y chart__grid')
        .call(make_y_axis()
        .tickSize(-width, 0, 0)
        .tickFormat(''));

    var TimesChart = focus.append('path')
        .datum(data)
        .attr('class', 'chart__line chart__times--focus line')
        .attr('d', TimesLine)
        .attr('data-legend', 'Times');

    var GuardianChart = focus.append('path')
        .datum(data)
        .attr('class', 'chart__line chart__guardian--focus line')
        .attr('d', GuardianLine).attr('data-legend', 'Guardian');

    var MailChart = focus.append('path')
        .datum(data)
        .attr('class', 'chart__line chart__mail--focus line')
        .attr('d', MailLine).attr('data-legend', 'Mail');

    var IndependentChart = focus.append('path')
        .datum(data)
        .attr('class', 'chart__line chart__independent--focus line')
        .attr('d', IndependentLine).attr('data-legend', 'Independent');

    var ExpressChart = focus.append('path')
        .datum(data)
        .attr('class', 'chart__line chart__express--focus line')
        .attr('d', ExpressLine).attr('data-legend', 'Express');

    var TelegraphChart = focus.append('path')
        .datum(data)
        .attr('class', 'chart__line chart__telegraph--focus line')
        .attr('d', TelegraphLine).attr('data-legend', 'Telegraph');

    focus.append('g')
        .attr('class', 'x axis')
        .attr('transform', 'translate(0 ,' + height + ')')
        .call(xAxis);

    focus.append('g')
        .attr('class', 'y axis')
        .attr('transform', 'translate(-5, 0)')
        .call(yAxis);

    var focusGraph = barsGroup.selectAll('rect')
        .data(data)
      .enter().append('rect')
        .attr('class', 'chart__bars')
        .attr('x', function(d, i) { return x(d.date)+i*1000; })
        // .attr('y', function(d) { return 0 + y3(d.min); })
        .attr('y',0)
        .attr('width', 1)
        .attr('height', function(d) { return 500; })
        // .attr('height', 300)
        .style('display', 'none');

     var labelx = parseInt(width-70+margin.left);

    var helper = svg.append('g')
      .attr('class', 'chart__helper')
      .style('text-anchor', 'end')
      .style('font-size', '14px')
      .attr('transform', 'translate(' + labelx + ', 15)');

     var helperLabel = svg.append('g')
      .attr('class', 'chart__helper')
      .style('text-anchor', 'end')
      .style('font-size', '14px')
      .attr('transform', 'translate(' + parseInt(width+margin.left) + ', 15)');

       var expressLabel = svg.append('g')
      .attr('class', 'chart__helper')
      .style('text-anchor', 'end')
      .attr('class', 'express');

        var guardianLabel = svg.append('g')
      .attr('class', 'chart__helper')
      .style('text-anchor', 'end')
      .attr('class', 'guardian');

        var independentLabel = svg.append('g')
      .attr('class', 'chart__helper')
      .style('text-anchor', 'end')
      .attr('class', 'independent');

        var mailLabel = svg.append('g')
      .attr('class', 'chart__helper')
      .style('text-anchor', 'end')
      .attr('class', 'mail');

       var telegraphLabel = svg.append('g')
      .attr('class', 'chart__helper')
      .style('text-anchor', 'end')
      .attr('class', 'telegraph');

        var timesLabel = svg.append('g')
      .attr('class', 'chart__helper')
      .style('text-anchor', 'end')
      .attr('class', 'times');

      var expressHelper = svg.append('g')
      .attr('class', 'chart__helper')
      .style('text-anchor', 'end')
      .attr('class', 'express');

      var guardianHelper = svg.append('g')
      .attr('class', 'chart__helper')
      .style('text-anchor', 'end')
      .attr('class', 'guardian');

      var independentHelper = svg.append('g')
      .attr('class', 'chart__helper')
      .style('text-anchor', 'end')
      .attr('class', 'independent');

      var mailHelper = svg.append('g')
      .attr('class', 'chart__helper')
      .style('text-anchor', 'end')
      .attr('class', 'mail');

       var telegraphHelper = svg.append('g')
      .attr('class', 'chart__helper')
      .style('text-anchor', 'end')
      .attr('class', 'telegraph');

      var timesHelper = svg.append('g')
      .attr('class', 'chart__helper')
      .style('text-anchor', 'end')
      .attr('class', 'times');


    var helperText = helper.append('text').attr('class', 'indented_details');
    var mailText = mailHelper.append('text').attr('class', 'indented_details');
    var guardianText = guardianHelper.append('text').attr('class', 'indented_details');
    var expressText = expressHelper.append('text').attr('class', 'indented_details');
    var independentText = independentHelper.append('text').attr('class', 'indented_details');
    var timesText = timesHelper.append('text').attr('class', 'indented_details');
    var telegraphText = telegraphHelper.append('text').attr('class', 'indented_details');

    var helperLabelText = helperLabel.append('text').attr('class', 'indented_details');
    var mailLabelText = mailLabel.append('text').attr('class', 'indented_details');
    var guardianLabelText = guardianLabel.append('text').attr('class', 'indented_details');
    var expressLabelText = expressLabel.append('text').attr('class', 'indented_details');
    var independentLabelText = independentLabel.append('text').attr('class', 'indented_details');
    var timesLabelText = timesLabel.append('text').attr('class', 'indented_details');
    var telegraphLabelText = telegraphLabel.append('text').attr('class', 'indented_details');


      var allLabels = [expressLabel,guardianLabel,independentLabel,mailLabel,telegraphLabel,timesLabel];
      var allTextHelpers = [expressHelper,guardianHelper,independentHelper,mailHelper,telegraphHelper,timesHelper];
      


      function reorderLabels(d){

      	var labelNames = {'express':expressLabel, 'guardian':guardianLabel,'independent':independentLabel,'mail':mailLabel,'telegraph':telegraphLabel,'times':timesLabel};
      	var textHelperNames = {'express':expressHelper, 'guardian':guardianHelper,'independent':independentHelper,'mail':mailHelper,'telegraph':telegraphHelper,'times':timesHelper};

      		keysSorted = Object.keys(d).sort(function(a,b){return d[a]-d[b]});
      		keysSorted.splice(-1,1);
	     

	      	for (i = 0;i<keysSorted.length;i++){ 

	      		var paper =  keysSorted[i];

	      		labelNames[paper].attr('transform', 'translate(' + labelx + ',' + (i+2)*25 + ' )');
	      		textHelperNames[paper].attr('transform', 'translate(' + parseInt(width+margin.left) + ',' + (i+2)*25 + ' )');
	      	}

	      	
      }

    var guardianTooltip = focus.append('g')
      .attr('class', 'chart__tooltip--guardian')
      .append('circle')
      .style('display', 'none')
      .attr('r', 2.5);

    var mailTooltip = focus.append('g')
      .attr('class', 'chart__tooltip--mail')
      .append('circle')
      .style('display', 'none')
      .attr('r', 2.5);

      var independentTooltip = focus.append('g')
      .attr('class', 'chart__tooltip--independent')
      .append('circle')
      .style('display', 'none')
      .attr('r', 2.5);

    var expressTooltip = focus.append('g')
      .attr('class', 'chart__tooltip--express')
      .append('circle')
      .style('display', 'none')
      .attr('r', 2.5);

      var telegraphTooltip = focus.append('g')
      .attr('class', 'chart__tooltip--telegraph')
      .append('circle')
      .style('display', 'none')
      .attr('r', 2.5);

    var timesTooltip = focus.append('g')
      .attr('class', 'chart__tooltip--times')
      .append('circle')
      .style('display', 'none')
      .attr('r', 2.5);

    var mouseArea = svg.append('g')
      .attr('class', 'chart__mouse')
      .append('rect')
      .attr('class', 'chart__overlay')
      .attr('width', width)
      .attr('height', height)
      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')
      .on('mouseover', function() {
        helper.style('display', null);
        helperLabel.style('display', null);
        // focusGraph.style('display', null);
        guardianTooltip.style('display', null);
        mailTooltip.style('display', null);
         expressTooltip.style('display', null);
        independentTooltip.style('display', null);
        timesTooltip.style('display', null);
        telegraphTooltip.style('display', null);
      
        timesHelper.style('display', null);
        independentHelper.style('display', null);
        guardianHelper.style('display', null);
        mailHelper.style('display', null);
        telegraphHelper.style('display', null);
        expressHelper.style('display', null);
      })
      .on('mouseout', function() {
        helper.style('display', 'none');
        helperLabel.style('display', 'none');
        // focusGraph.style('display', 'none');
        guardianTooltip.style('display', 'none');
        mailTooltip.style('display', 'none');
        expressTooltip.style('display', 'none');
        independentTooltip.style('display', 'none');
        timesTooltip.style('display', 'none');
        telegraphTooltip.style('display', 'none');

        timesHelper.style('display', 'none');
        independentHelper.style('display', 'none');
        guardianHelper.style('display', 'none');
        mailHelper.style('display', 'none');
        telegraphHelper.style('display', 'none');
        expressHelper.style('display', 'none');
      })
      .on('mousemove', mousemove);

    // context.append('path')
    //     .datum(data)
    //     .attr('class', 'chart__area area')
    //     .attr('d', area2);

    // context.append('g')
    //     .attr('class', 'x axis chart__axis--context')
    //     .attr('y', 0)
    //     .attr('transform', 'translate(0,' + (height2 - 22) + ')')
    //     .call(xAxis2);

    // context.append('g')
    //     .attr('class', 'x brush')
    //     .call(brush)
    //   .selectAll('rect')
    //     .attr('y', -6)
    //     .attr('height', height2 + 7);

    function mousemove() {
      var x0 = x.invert(d3.mouse(this)[0]);
      var i = bisectDate(data, x0, 1);
      var d0 = data[i - 1];
      var d1 = data[i];
      var d = x0 - d0.date > d1.date - x0 ? d1 : d0;
      helperText.text(legendFormat(new Date(d.date)));
      helperLabelText.text(timeFormat(new Date(d.date)));

      reorderLabels(d);
	  guardianText.text(d.guardian);
      mailText.text(d.mail);
      expressText.text(d.express);
      independentText.text(d.independent);
      timesText.text(d.times);
      telegraphText.text(d.telegraph);

      guardianLabelText.text("Guardian");
      mailLabelText.text("Mail");
      expressLabelText.text("Express");
      independentLabelText.text("Independent");
      timesLabelText.text("Times");
      telegraphLabelText.text("Telegraph");

      // focusGraph.attr('transform', 'translate(' + x(d.date) + ',' + 0 + ')');
      guardianTooltip.attr('transform', 'translate(' + x(d.date) + ',' + y(d.guardian) + ')');
      mailTooltip.attr('transform', 'translate(' + x(d.date) + ',' + y(d.mail) + ')');
      expressTooltip.attr('transform', 'translate(' + x(d.date) + ',' + y(d.express) + ')');
      independentTooltip.attr('transform', 'translate(' + x(d.date) + ',' + y(d.independent) + ')');
      timesTooltip.attr('transform', 'translate(' + x(d.date) + ',' + y(d.times) + ')');
      telegraphTooltip.attr('transform', 'translate(' + x(d.date) + ',' + y(d.telegraph) + ')');
      
    }

    function brushed() {
      var ext = brush.extent();
      if (!brush.empty()) {
        x.domain(brush.empty() ? x2.domain() : brush.extent());
        y.domain([
          d3.min(data.map(function(d) { return (d.date >= ext[0] && d.date <= ext[1]) ? d.guardian : max; })),
          d3.max(data.map(function(d) { return (d.date >= ext[0] && d.date <= ext[1]) ? d.guardian : min; }))
        ]);
        range.text(legendFormat(new Date(ext[0])) + ' - ' + legendFormat(new Date(ext[1])))
        focusGraph.attr('x', function(d, i) { return x(d.date); });

        var days = Math.ceil((ext[1] - ext[0]) / (24 * 3600 * 1000))
        focusGraph.attr('width', (40 > days) ? (40 - days) * 5 / 6 : 5)
      }

      GuardianChart.attr('d', GuardianLine);
      TimesChart.attr('d', TimesLine);
      MailChart.attr('d', MailLine);
      ExpressChart.attr('d', ExpressLine);
      TelegraphChart.attr('d', TelegraphLine);
      IndependentChart.attr('d', IndependentLine);
      focus.select('.x.axis').call(xAxis);
      focus.select('.y.axis').call(yAxis);
    }

    var dateRange = ['1w', '1m', '1y']
    for (var i = 0, l = dateRange.length; i < l; i ++) {
      var v = dateRange[i];
      rangeSelection
        .append('text')
        .attr('class', 'chart__range-selection')
        .text(v)
        .attr('transform', 'translate(' + (18 * i) + ', 0)')
        .on('click', function(d) { focusOnRange(this.textContent); });
    }

    function focusOnRange(range) {
      var today = new Date(data[data.length - 1].date)
      var ext = new Date(data[data.length - 1].date)

      if (range === '1m')
        ext.setMonth(ext.getMonth() - 1)

      if (range === '1w')
        ext.setDate(ext.getDate() - 7)

      if (range === '1y')
        ext.setFullYear(ext.getFullYear() - 1)

      brush.extent([ext, today])
      brushed()
      // context.select('g.x.brush').call(brush.extent([ext, today]))
    }

  })// end Data

  function type(d) {
    return {
      date    : parseDate(d.Date),
      guardian   : d.Guardian,
      mail   : d.Mail,
      express   : d.Express,
      telegraph   : d.Telegraph,
      independent   : d.Independent,
      times   : d.Times
    }
  }




}());
</script>
<script>
// $(window).load(function(){ 
// $("div").insertAfter( $( "#wrapper" )).html("<h3>Why?</h3><p></p><h3>How?</h3><p>Once an hour, we take the RSS feed from Britain's 'top' newspapers, and run them through sentiment analysis to see bla bla...</p><h3>Can I hack it?</h3><p>Sure you can, check out my GH</p>");

// });
</script>